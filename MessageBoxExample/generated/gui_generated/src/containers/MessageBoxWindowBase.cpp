/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/MessageBoxWindowBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MessageBoxWindowBase::MessageBoxWindowBase() :
    flexButtonCallback(this, &MessageBoxWindowBase::flexButtonCallbackHandler)
{
    setWidth(800);
    setHeight(480);
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_BGFULL_ID), 0, 0);
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    image1.setXY(177, 119);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_MESSAGEBOXBG_ID));
    modalWindow1.add(image1);

    CancelflexButton.setBoxWithBorderPosition(0, 0, 121, 38);
    CancelflexButton.setBorderSize(0);
    CancelflexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    CancelflexButton.setText(TypedText(T___SINGLEUSE_1IKZ));
    CancelflexButton.setTextPosition(0, 6, 121, 38);
    CancelflexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    CancelflexButton.setAction(flexButtonCallback);
    CancelflexButton.setPosition(427, 302, 121, 38);
    modalWindow1.add(CancelflexButton);

    MessageIcon.setXY(360, 136);
    MessageIcon.setBitmap(touchgfx::Bitmap(BITMAP_INFOICON_ID));
    modalWindow1.add(MessageIcon);

    MessageText.setPosition(186, 229, 429, 69);
    MessageText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    MessageText.setLinespacing(0);
    MessageText.setWideTextAction(WIDE_TEXT_CHARWRAP);
    Unicode::snprintf(MessageTextBuffer, MESSAGETEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RI54).getText());
    MessageText.setWildcard(MessageTextBuffer);
    MessageText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T2R4));
    modalWindow1.add(MessageText);

    OKflexButton.setBoxWithBorderPosition(0, 0, 121, 38);
    OKflexButton.setBorderSize(0);
    OKflexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    OKflexButton.setText(TypedText(T___SINGLEUSE_4V8O));
    OKflexButton.setTextPosition(0, 6, 121, 38);
    OKflexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255));
    OKflexButton.setAction(flexButtonCallback);
    OKflexButton.setPosition(251, 302, 121, 38);
    modalWindow1.add(OKflexButton);

    add(modalWindow1);
}

MessageBoxWindowBase::~MessageBoxWindowBase()
{

}

void MessageBoxWindowBase::initialize()
{

}

void MessageBoxWindowBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &OKflexButton)
    {
        //OKButttonInteraction
        //When OKflexButton clicked call virtual function
        //Call OKButton_Execute
        OKButton_Execute();
    }
    if (&src == &CancelflexButton)
    {
        //CancelButtonInteraction
        //When CancelflexButton clicked call virtual function
        //Call CancelButton_Execute
        CancelButton_Execute();
    }
}
